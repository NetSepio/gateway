name: "Build and Push to GHCR"

on:
  push:
    branches: 
      # - main
      - prod
      - aws_prod
      - v1.1     
      
jobs:
  build_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      
      - name: Build and Push Docker Image
        run: |
          export CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
          export TAG=$([[ $CURRENT_BRANCH == $(basename ${{ github.ref }}) ]] && echo $CURRENT_BRANCH || echo "latest")
          echo $TAG
          export GITHUB_REF_IMAGE=ghcr.io/$GITHUB_REPOSITORY:$GITHUB_SHA
          export GITHUB_BRANCH_IMAGE=ghcr.io/$GITHUB_REPOSITORY:$TAG
          export GITHUB_REF_IMAGE=$(echo $GITHUB_REF_IMAGE | tr '[:upper:]' '[:lower:]')
          export GITHUB_BRANCH_IMAGE=$(echo $GITHUB_BRANCH_IMAGE | tr '[:upper:]' '[:lower:]')
          docker build --build-arg version=$GITHUB_SHA -t $GITHUB_REF_IMAGE -t $GITHUB_BRANCH_IMAGE .
          echo "Pushing Image to GitHub Container Registry"
          docker push $GITHUB_REF_IMAGE
          docker push $GITHUB_BRANCH_IMAGE
        
  deploy:
    needs: build_push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy on DEV server 
      if: github.ref == 'refs/heads/main' 
      uses: appleboy/ssh-action@v0.1.7
      with:         
        host: ${{ secrets.DEV_REMOTE_SERVER_ADDRESS }}
        username: ${{ secrets.DEV_SERVER_USERNAME }}
        key:  ${{ secrets.DEV_REMOTE_SERVER_KEY }}
        port: ${{ secrets.DEV_SSH_PORT }} 
        script: |
          pwd
          cd gateway
          docker stop gateway && docker rm gateway && docker image rm ghcr.io/netsepio/gateway:main
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          docker pull ghcr.io/netsepio/gateway:main
          docker run --restart=on-failure:14 --dns=1.1.1.1 --name="gateway" --env-file=.env -p 3000:3000 --net=bridge -d ghcr.io/netsepio/gateway:main

    # - name: Deploy on PROD server
    #   if: github.ref == 'refs/heads/prod'
    #   run: |
    #     docker pull ghcr.io/netsepio/gateway:prod
    #     docker tag  ghcr.io/netsepio/gateway:prod us-west4-docker.pkg.dev/netsepio-prod/netsepio/netsepio-gateway:prod
    #     gcloud auth activate-service-account --key-file=${{ secrets.SERVICE_ACCOUNT_KEY_FILE_PATH }} --project=${{ secrets.PROJECT }}
    #     gcloud config set account ${{ secrets.SERVICE_ACCOUNT }}
    #     gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-west4-docker.pkg.dev
    #     docker push us-west4-docker.pkg.dev/netsepio-prod/netsepio/netsepio-gateway:prod
    #     gcloud run deploy netsepio-gateway --image us-west4-docker.pkg.dev/netsepio-prod/netsepio/netsepio-gateway:prod --region us-west4
    
    - name: Deploy on PROD server 
      if: github.ref == 'refs/heads/aws_prod' 
      uses: appleboy/ssh-action@v0.1.7
      with:         
        host: ${{ secrets.AWS_REMOTE_SERVER_ADDRESS }}
        username: ${{ secrets.AWS_REMOTE_SERVER_USERNAME }}
        key:  ${{ secrets.AWS_REMOTE_SERVER_KEY }}
        port: ${{ secrets.AWS_SSH_PORT }} 
        script: |
          pwd
          cd gateway
          docker stop gateway && docker rm gateway && docker image rm ghcr.io/netsepio/gateway:aws_prod
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          docker pull ghcr.io/netsepio/gateway:aws_prod
          docker run --restart=on-failure:14 --dns=1.1.1.1 --name="gateway" --env-file=.env -p 3000:3000 --net=netsepio_prod_network -d ghcr.io/netsepio/gateway:aws_prod

    - name: Deploy on PROD server V1.1 
      if: github.ref == 'refs/heads/v1.1' 
      uses: appleboy/ssh-action@v0.1.7
      with:         
        host: ${{ secrets.AWS_REMOTE_SERVER_ADDRESS }}
        username: ${{ secrets.AWS_REMOTE_SERVER_USERNAME }}
        key:  ${{ secrets.AWS_REMOTE_SERVER_KEY }}
        port: ${{ secrets.AWS_SSH_PORT }} 
        script: |
          pwd
          cd gateway
          docker stop gateway_v1_1 
          docker rm gateway_v1_1 
          docker image rm ghcr.io/netsepio/gateway:v1.1
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          docker pull ghcr.io/netsepio/gateway:v1.1
          docker run --restart=on-failure:14 --dns=1.1.1.1 --name="gateway_v1_1" --env-file=.env -p 3001:3000 --net=netsepio_prod_network -d ghcr.io/netsepio/gateway:v1.1
